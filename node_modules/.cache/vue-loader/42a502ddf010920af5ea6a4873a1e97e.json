{"remainingRequest":"G:\\work\\VueWork\\newTask\\development\\separate\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\work\\VueWork\\newTask\\development\\separate\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"G:\\work\\VueWork\\newTask\\development\\separate\\src\\App.vue","mtime":1629293928293},{"path":"G:\\work\\VueWork\\newTask\\development\\separate\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\work\\VueWork\\newTask\\development\\separate\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"G:\\work\\VueWork\\newTask\\development\\separate\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"G:\\work\\VueWork\\newTask\\development\\separate\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\work\\VueWork\\newTask\\development\\separate\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLm1vZGFsLW92ZXJsYXkgew0KICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMyk7DQp9DQpAZm9udC1mYWNlIHsNCiAgZm9udC1mYW1pbHk6ICJFbHZpc2hGb250IjsNCiAgc3JjOiBsb2NhbCgiUGluZ0ZhbmdTQy1SZWd1bGFyIiksDQogICB1cmwoLi9hc3NldHMvZm9udHMvdG5nYW5iaS53b2ZmKSBmb3JtYXQoInRydWV0eXBlIik7DQp9DQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <div class=\"beforeTranslate\">\r\n    \r\n    <ai-navigation></ai-navigation>\r\n\r\n    <!-- Topscreen -->\r\n    <main id=\"topscreen\" class=\"topscreen\">\r\n      <div id=\"contents\">\r\n        <lang-container :class=\"{ openSettingPanel: !isSettingsHided }\" />\r\n\r\n        <setting-panel\r\n          v-model=\"modal\"\r\n          @toggle-settings=\"isSettingsHided = $event\"\r\n          :data=\"this.csvData\"\r\n          :langData=\"this.lang\"\r\n        ></setting-panel>\r\n        <!-- /END #settingPanel -->\r\n      </div>\r\n      <!-- /END #contents -->\r\n\r\n      <div class=\"topscreen_overlay\"></div>\r\n    </main>\r\n    <!-- /END #topscreen -->\r\n\r\n    <zoom-modal v-if=\"modal === 'zoom'\" :data=\"this.csvData\" @resetModal=\"modal = $event\" />\r\n    <teams-modal v-if=\"modal === 'teams'\" :data=\"this.csvData\" @resetModal=\"modal = $event\" />\r\n    <meet-modal v-if=\"modal === 'meet'\" :data=\"this.csvData\" @resetModal=\"modal = $event\" />\r\n    <whereby-modal v-if=\"modal === 'whereby'\" :data=\"this.csvData\" @resetModal=\"modal = $event\" />\r\n    <hangouts-modal v-if=\"modal === 'hangouts'\" @resetModal=\"modal = $event\" />\r\n    <skype-modal v-if=\"modal === 'skype'\" :data=\"this.csvData\" @resetModal=\"modal = $event\" />\r\n    \r\n    <extension-install\r\n      id=\"install\"\r\n      v-if=\"showInstall\"\r\n      :data=\"this.csvData\"\r\n      @resetModal=\"modal = $event\"\r\n    />\r\n    <!-- <circle-spin color=\"#ff0000\" width=100px height=100px :loading=\"isLoading\"></circle-spin> -->\r\n    <loading\r\n      id=\"loading\"\r\n      v-if=\"isLoading\"\r\n      @resetModal=\"modal = $event\"\r\n    />\r\n    <!-- <vue-simple-spinner size=\"medium\" /> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LangContainer from \"@/components/lang-container.vue\";\r\nimport AiNavigation from \"@/components/ai-navigation.vue\";\r\nimport SettingPanel from \"@/components/setting-panel.vue\";\r\nimport ZoomModal from \"@/components/modals/zoom-modal.vue\";\r\nimport TeamsModal from \"@/components/modals/teams-modal.vue\";\r\nimport HangoutsModal from \"@/components/modals/hangouts-modal.vue\";\r\nimport ExtensionInstall from \"@/components/modals/extension-install.vue\";\r\nimport WherebyModal from \"@/components/modals/whereby-modal.vue\";\r\nimport MeetModal from \"@/components/modals/meet-modal.vue\";\r\nimport SkypeModal from \"@/components/modals/skype-modal.vue\";\r\nimport Loading from \"@/components/modals/loading.vue\";\r\n// import csvFile from \"./assets/test.csv\";\r\n// var csvFile = require(\"./assets/test.csv\");\r\nimport * as Papa from 'papaparse'\r\n// import VueSimpleSpinner from 'vue-simple-spinner'\r\nexport default {\r\n  components: {\r\n    LangContainer,\r\n    AiNavigation,\r\n    SettingPanel,\r\n    ZoomModal,\r\n    TeamsModal,\r\n    HangoutsModal,\r\n    WherebyModal,\r\n    MeetModal,\r\n    SkypeModal,\r\n    ExtensionInstall,\r\n    Loading,\r\n    // VueSimpleSpinner\r\n  },\r\n  data: () => ({\r\n    isLoading: true,\r\n    modal: \"\",\r\n    isSettingsHided: false,\r\n    showInstall: false,\r\n    _id: \"0\",\r\n    lang: \"jp\",\r\n    csvData: {\r\n      \"cc\":\"jp\",\r\n      \"extension1\":\"Please install the extension.\",\r\n      \"extension2\":\"It seems that the extension is not installed in this browser. This service uses the \\\"AI HONYAKU extension\\\" for Google Chrome. Please click the button below to install the extension. This screen will not appear after the extension installation is complete.\",\r\n      \"extension3\":\"Install the extension\",\r\n      \"privacy1\":\"AI通訳の\",\r\n      \"privacy2\":\"利用規約\",\r\n      \"privacy3\":\"に同意する。\",\r\n      \"meetingurl\":\"ミーティングURL\",\r\n      \"zoom1\":\"ZoomミーティングルームのURLと表示名を入力してZoomを開始してください。\",\r\n      \"zoom2\":\"表示名\",\r\n      \"zoom3\":\"AI翻訳\",\r\n      \"zoom4\":\"Zoomに入室し翻訳を開始\",\r\n      \"zoom5\":\"Zoomに入室し翻訳を開始\",\r\n      \"teams1\":\"??会議のURLを入力してTeamsに入室し、「ウェブ上で参加/ブラウ\",\r\n      \"teams2\":\"??会議のURLを入力してTeamsに入室し、「ウェブ上で参加/ブラウ\",\r\n      \"teams3\":\"ザで続行」をクリックしてください。\",\r\n      \"teams4\":\"Teamsに入室して通訳を開始\",\r\n      \"gmeet1\":\"Google?Meetに入室し、通訳を開始します。\",\r\n      \"gmeet2\":\"Google?Meetに入室し、通訳を開始します。\",\r\n      \"gmeet3\":\"会議のURLを入力してください。\",\r\n      \"gmeet4\":\"Google?Meetに入室して通訳を開始\",\r\n      \"whereby1\":\"Wherebyに入室し、通訳を開始します。\",\r\n      \"whereby2\":\"Wherebyに入室し、通訳を開始します。\",\r\n      \"whereby3\":\"会議のURLを入力してください。\",\r\n      \"whereby4\":\"Wherebyに入室して通訳を開始\",\r\n      \"skype1\":\"Skypeに入室し、通訳を開始します。\",\r\n      \"skype2\":\"Skypeに入室し、通訳を開始します。\",\r\n      \"skype3\":\"会議のURLを入力してください。\",\r\n      \"skype4\":\"Skypeに入室して通訳を開始\",\r\n      \"menu1\":\"zoomに出力\",\r\n      \"menu2\":\"Teamsに出力\",\r\n      \"menu3\":\"GoogleMeet?に出力\",\r\n      \"menu4\":\"Wherebyに出力\",\r\n      \"menu5\":\"Skypeに出力\",\r\n      \"menu6\":\"発話言語\",\r\n      \"menu7\":\"翻訳先言語\"\r\n    },\r\n  }),\r\n  watch: {\r\n    csvData (current) {\r\n      if (current) {\r\n        console.log(\"============== \" + current);\r\n      }\r\n    },\r\n    modal() {\r\n    },\r\n    isSettingsHided() {\r\n    },\r\n  },\r\n  methods: {\r\n    openInstall() {\r\n      const key = require(\"./constant.json\");\r\n      const extensionid = key.extensionid;\r\n      this.detectExtension(extensionid);\r\n    },\r\n    detectExtension(extensionId) {\r\n      \r\n      this.intervalLoading = setInterval(() => {\r\n        this.isLoading = false;\r\n      }, 500);\r\n      \r\n      var img;\r\n      img = new Image();\r\n      img.src = \"chrome-extension://\" + extensionId + \"/icon16.png\";\r\n      img.onload = function () {\r\n        localStorage.setItem(\"stateInstall\", false);\r\n      };\r\n      img.onerror = function () {\r\n        localStorage.setItem(\"stateInstall\", true);\r\n      };\r\n    },\r\n    showModal() {\r\n      var is = localStorage.getItem(\"stateInstall\");\r\n      if (is === \"true\") {\r\n        this.showInstall = localStorage.getItem(\"stateInstall\");\r\n      }\r\n    },\r\n    changeInput(lang) {\r\n      console.log(\"Input Lang===\", lang);\r\n    },\r\n    checkInstall(data) {\r\n      this.csvData = data;\r\n      localStorage.setItem(\"stateInstall\", null);\r\n      \r\n      console.log(\"checkInstall:\\n \" + data.cc);\r\n      this.openInstall();\r\n      this.interval = setInterval(() => this.showModal(), 1000);\r\n    },\r\n    createInput(file, aLang, callBack) {\r\n      Papa.parse(file, {\r\n        download: true,\r\n        // rest of config ...\r\n        header: true,\r\n        encoding: \"Unicode\",\r\n        dynamicTyping: false,\r\n        skipEmptyLines: true,\r\n        complete: function(results) {\r\n          // console.log(aLang + \" RESULTS:\\n \" + JSON.stringify(results));\r\n                \r\n          results.data.forEach(element => {\r\n            if (element.cc === aLang) {\r\n              this.csvData = element;\r\n              // console.log(\"csvData222:\\n \" + this.csvData.zoom1);\r\n              callBack(this.csvData);\r\n              return;\r\n            }\r\n          });\r\n\r\n          // this.csvData = results;\r\n          // console.log(\"csvData:\\n \" + JSON.stringify(this.csvData.data[0]));\r\n          // data = results;\r\n          // makeCsvTable(fileList);\r\n        }\r\n      });\r\n      \r\n      \r\n    },\r\n    getCsvData() {\r\n      const key = require(\"./constant.json\");\r\n      var csvFile = key.home_url + \"languages.csv\";\r\n      this.createInput(csvFile, this.lang, this.checkInstall);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.isLoading = true;\r\n    var callTime = localStorage.getItem(\"callTime\");\r\n    var setLang = localStorage.getItem(\"setLang\");\r\n    let curTime = Math.round(new Date() / 1000);\r\n    // console.log(\"callTime ================== \" + callTime + \" == \" + setLang + \" == \" + curTime);\r\n    \r\n    if (callTime == null | setLang == null | curTime - callTime > 604800 | callTime == \"null\" | setLang == \"null\")\r\n    {\r\n      fetch( 'https://api.ipify.org?format=json' )\r\n        .then(x => x.json())\r\n        .then(({ ip }) => {\r\n          console.log(\"IP Address ===\", ip);\r\n          this._id = ip;\r\n          fetch(\r\n            \"http://api.ipstack.com/\" + ip + \"?access_key=da810eb17632d25a6d76072379f26fcb\"\r\n          )\r\n            .then(async (response) => {\r\n              const data = await response.json();\r\n              if (data.location.languages.length > 0){\r\n                console.log(\"response ===\", data.location.languages.length + \" == \" + data.location.languages[0].code);\r\n                this.lang = data.location.languages[0].code;\r\n                localStorage.setItem(\"callTime\", curTime);\r\n                localStorage.setItem(\"setLang\", this.lang);\r\n                console.log(\"this.lang ===\", this.lang);\r\n              }\r\n          //    this.checkInstall();\r\n              this.getCsvData();\r\n              // localStorage.setItem(\"result\", result);\r\n            })\r\n            .catch(function (error) {\r\n              console.log(\"error == \" + error);\r\n          //    this.checkInstall();\r\n              this.getCsvData();\r\n            });\r\n        })\r\n        .catch(function (error) {\r\n          console.log(\"error == \" + error);\r\n        //  this.checkInstall();\r\n          this.getCsvData();\r\n        });\r\n    }\r\n    else{\r\n      this.lang = setLang;\r\n      this.getCsvData();\r\n    }\r\n\r\n  },\r\n  \r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n.modal-overlay {\r\n  background: rgba(0, 0, 0, 0.3);\r\n}\r\n@font-face {\r\n  font-family: \"ElvishFont\";\r\n  src: local(\"PingFangSC-Regular\"),\r\n   url(./assets/fonts/tnganbi.woff) format(\"truetype\");\r\n}\r\n</style>\r\n"]}]}